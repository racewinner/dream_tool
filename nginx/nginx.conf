# DREAM Tool Hybrid Architecture - Nginx Configuration
# Routes requests between TypeScript backend and Python services

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    upstream typescript_backend {
        server backend:3001;
        keepalive 32;
    }

    upstream python_services {
        server python-services:8000;
        keepalive 32;
    }

    upstream frontend {
        server frontend:5173;
        keepalive 32;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=python_limit:10m rate=5r/s;

    # Caching
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m;

server {
    listen 80;
    server_name localhost;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Frontend (React)
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket support for development
        proxy_read_timeout 86400;
    }

    # Python Services - Advanced Analytics
    location /api/python/ {
        # Rate limiting for Python services (more compute-intensive)
        limit_req zone=python_limit burst=10 nodelay;
        
        proxy_pass http://python_services;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for complex calculations
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Add service identifier header
        add_header X-Service-Type "python-analytics" always;
        
        # Cache GET requests for equipment database and benchmarks
        location ~* ^/api/python/(energy/equipment-database|energy/benchmarks|mcda/health|energy/health) {
            proxy_pass http://python_services;
            proxy_cache api_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }

    # TypeScript Backend - Main API
    location /api/ {
        # Rate limiting for main API
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://typescript_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard timeout for web API
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Add service identifier header
        add_header X-Service-Type "typescript-backend" always;
        
        # Cache static/reference data
        location ~* ^/api/(facilities|equipment-database|benchmarks) {
            proxy_pass http://typescript_backend;
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }

    # Health checks
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Backend health check
    location /api/health {
        proxy_pass http://typescript_backend/health;
        access_log off;
    }

    # Python services health check
    location /api/python/health {
        proxy_pass http://python_services/health;
        access_log off;
    }

    # API documentation
    location /docs {
        proxy_pass http://python_services/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS configuration (for production - commented out for development)
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#     
#     # SSL configuration (add your certificates)
#     # ssl_certificate /path/to/certificate.crt;
#     # ssl_certificate_key /path/to/private.key;
#     
#     # SSL security settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Same configuration as HTTP server
#     # ... (copy all location blocks from above)
# }

# Redirect HTTP to HTTPS (for production)
# server {
#     listen 80;
#     server_name localhost;
#     return 301 https://$server_name$request_uri;
# }

}
